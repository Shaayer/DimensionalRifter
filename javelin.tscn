[gd_scene load_steps=4 format=3 uid="uid://b4rg3whxmpsre"]

[ext_resource type="Texture2D" uid="uid://cwgrsb105olam" path="res://icon.svg" id="1_fksdm"]

[sub_resource type="GDScript" id="GDScript_2qjke"]
script/source = "extends CharacterBody2D

var speed=5
var currentTargetX=0
var currentTargetY=0
# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.
var mousePosition;

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	if currentTargetX != 0 and currentTargetY !=0:
		var m=move(currentTargetX, currentTargetY, global_position, speed)
		global_position.x+=m[0]
		global_position.y+=m[1]
		#rotation=m[2]
	
	
func _input(event):
	if event is InputEventMouseButton:
		print(\"Mouse Click/Unclick at: \", event.position)
		var mouse=get_global_mouse_position()
		currentTargetX=mouse.x
		currentTargetY=mouse.y
		#position=mouse
		#var distanceX=abs(currentTargetX-mouse.x)
		#var distanceY=abs(currentTargetY-mouse.y)
		#var slope=distanceY/distanceX
		#var newDistanceX=distanceX*20
		#var newDistanceY=distanceY*20*slope
		#if currentTargetX<position.x:
			#currentTargetX-=newDistanceX
		#if currentTargetX>position.x:
			#currentTargetX+=newDistanceX
		#if currentTargetY>position.y:
			#currentTargetY+=newDistanceY
		#if currentTargetY<position.y:
			#currentTargetY-=newDistanceY
		#if currentTargetX==position.x:
			#currentTargetX=-9999999999999999999
		#if currentTargetY==position.y:
			#currentTargetY=-9999999999999999999

func move(targetX, targetY, javelin, speed):
	#var num1=abs(targetX-javelin.x)
	#var num2=abs(targetY-javelin.y)
	#var distance=sqrt(num1**2+num2**2)
	#var distanceX=targetX-javelin.x
	#var distanceY=targetY-javelin.y
	#var quotient=speed/distance 
	#var changeX=distanceX*quotient
	#var changeY=distanceY*quotient
	#var rotate=atan(changeY/changeX)
	#return [changeX, changeY, rotate]
	
	
	#distance=abs(Vector2(targetX,targetY) - Vector2(javelin.x,javelin.y))
	var distance=Vector2(targetX,targetY).distance_to(Vector2(javelin.x,javelin.y))
	var distanceX=abs(targetX-javelin.x)
	var distanceY=abs(targetY - javelin.y)
	var quotient=speed/distance
	if targetX<javelin.x:
		distanceX=-distanceX
	if targetY<javelin.y:
		distanceY=-distanceY
	#return[distanceX,distanceY,PI]
	var changeX=distanceX*quotient
	var changeY=distanceY*quotient
	look_at(Vector2(targetX,targetY))
	return [changeX, changeY]
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_2xq7p"]
radius = 44.0
height = 192.0

[node name="Javelin" type="CharacterBody2D"]
scale = Vector2(1, 0.1875)
collision_layer = 2
script = SubResource("GDScript_2qjke")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CapsuleShape2D_2xq7p")
metadata/_edit_lock_ = true

[node name="Icon" type="Sprite2D" parent="."]
scale = Vector2(0.695312, 1.5)
texture = ExtResource("1_fksdm")
